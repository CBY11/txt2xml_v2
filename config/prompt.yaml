root_pth: F:\SY_files\SY_xml_prompt_work\code_file\txt2xml_v2
src_xml_file: F:\SY_files\SY_xml_prompt_work\code_file\txt2xml_v2\xml_file\safe_demo\safe_demo_src.xml
dest_xml_file: F:\SY_files\SY_xml_prompt_work\code_file\txt2xml_v2\xml_file\safe_demo\safe_demo.xml
prompt_yaml: F:\SY_files\SY_xml_prompt_work\code_file\txt2xml_v2\config\prompt.yaml
example_json:
  - json: F:\SY_files\SY_xml_prompt_work\code_file\txt2xml_v2\tmp\json\example_base.json
  - json: F:\SY_files\SY_xml_prompt_work\code_file\txt2xml_v2\tmp\json\example_missile.json
  - json: F:\SY_files\SY_xml_prompt_work\code_file\txt2xml_v2\tmp\json\example_plane.json
  - json: F:\SY_files\SY_xml_prompt_work\code_file\txt2xml_v2\tmp\json\example_ship.json
  - json: F:\SY_files\SY_xml_prompt_work\code_file\txt2xml_v2\tmp\json\example_target.json


# 识别行为模式的模板
classify_action_prompt_front: |
  #### 定位
  - 智能助手名称 ：行为模式分类专家
  - 主要任务 ：对输入命令进行行为模式自动分类，识别其所属的行为模式。
  #### 能力
  - 文本分析 ：能够准确分析文本的内容和结构。
  - 分类识别 ：根据分析结果，将文本分类到预定义的种类中。
  #### 知识储备
  - 行为模式种类 ：
    - 1：在某地(具体位置)部署某物
    - 2：从某地部署某物执行某行为目标是某地
    - 3：在某区域(模糊描述)部署某物
  #### 使用说明
  - 输入 ：一段文本表示一段命令。
  - 输出 ：只输出命令文本所属的种类，即序号1、2、3...，不需要额外解释。 
#
classify_action_prompt_back: |
  #### 示例
  - 输入1："在 (116.391N, 40.042E) 处部署福特号航空母舰，配有10架闪电战斗机，20架民兵3导弹发射器"
    输出1：1
  - 输入2："在(16.391N, -140.042E) 部署阿利·伯克号驱逐舰，配有5枚战斧巡航导弹，打击目标为旧金山"
    输出2：2
  - 输入3："在四川和北京交界处部署3辆坦克"
    输出3：3
#
#
get_info_templates:
  - get_info_template: |
      用户将提供一段文本，提取其中关于结构的信息，并以JSON格式输出。
      EXAMPLE INPUT : 
      在 (116.391N, 40.042E) 处部署福特号航空母舰，配有10架闪电战斗机，20架民兵3
      EXAMPLE JSON OUTPUT :
      {
        "action_type": "1",
        "object": {
          "object_name": "福特号航空母舰",
          "longitude": "116.391",
          "latitude": "40.042",
          "object_asset": [
            {
              "object_name": "闪电战斗机",
              "number": "10"
            },
            {
              "object_name": "民兵3",
              "number": "20"
            }
          ]
        }
      }

  - get_info_template: |
      用户将提供一段文本，提取其中关于结构的信息，并以JSON格式输出。
      EXAMPLE INPUT : 
      在(16.391N, -140.042E) 部署阿利·伯克号驱逐舰，配有5枚战斧巡航导弹，打击目标为旧金山
      EXAMPLE JSON OUTPUT :
        {
          "action_type": "2",
          "object": {
            "object_name": "阿利·伯克号驱逐舰",
            "longitude": "16.391",
            "latitude": "-140.042",
            "object_assets": [
              {
                "object_name": "战斧巡航导弹",
                "number": "5",
              }
            ],
            "object_targets": [
              {
                "object_name": "旧金山",
              }
            ]
          }
        }

  - get_info_template: |
      用户将提供一段文本，提取其中关于结构的信息，并以JSON格式输出。
      EXAMPLE INPUT : 
      在四川和北京交界处部署3辆坦克
      EXAMPLE JSON OUTPUT :
      {
          "action_type": "3",
          "objects": [
              { 
                  "object_type": "坦克",
                  "number": "3",
                  "area": "四川和北京交界处"
              },
          ]
      }
  - get_info_template: |
      用户将提供一段文本，提取其中关于结构的信息，并以JSON格式输出。
      EXAMPLE INPUT : 
      将福特号航空母舰调遣到 (116.391N, 40.042E) 处

      EXAMPLE JSON OUTPUT :
      {
        "action_type": "4",
        "object": {
          "object_name": "福特号航空母舰",
          "longitude": "116.391",
          "latitude": "40.042",
          "object_asset": [
            {
              "object_name": "闪电战斗机",
              "number": "10"
            },
            {
              "object_name": "民兵3",
              "number": "20"
            }
          ]
        }
      }

#
#
find_op_action_list: [ 4, ]
json2xml_prompt: |
  用户将输入一个json对象，将其转换为xml格式:
  EXAMPLE JSON INPUT: 
    {
      "action_type": "1",
      "object": {
        "object_name": "CVN78",
        "longitude": "116.391",
        "latitude": "40.042",
        "attribute": {
          "plane": "True",
          "nuclear_power": true,
          "speed_knot": 30,
        },
        "object_assets": [
          {
            "object_name": "LGM-30G",
            "number": "20",
            "attribute": {
              "on_land": true,
              "to_plane": false,
              "range": 13000,
            }
          }
        ],
        "object_targets": [
          {
            "name": "New York",
            "attribute": {
              "lat": 40.7128,
              "lon": -74.0060,
              "people_count": 8804190
            }
          }
        ]
      }
    }

  EXAMPLE XML OUTPUT:
  <Factory name="CVN78">
          <FactoryWaypoints> 
              <WaypointTableEntry> 
                  <Lat>116.391</Lat> 
                  <Lon>40.042</Lon>
                  <Alt>0</Alt> 
                  <latest/>
              </WaypointTableEntry>
          </FactoryWaypoints>
          <FactoryAttributes>
              <plane>true</plane>
              <nuclear_power>true</nuclear_power>
              <speed_knot>30</speed_knot>
          </FactoryAttributes>
          <SomethingLoad>
              <Name>LGM-30G</Name> 
              <Count>20</Count>
              <SomethingLoadAttributes> 
                  <UseSystemDefaultSomething>True</UseSystemDefaultSomething>
                  <on_land>true</on_land>
                  <to_plane>false</to_plane>
                  <range>13000</range>
              </SomethingLoadAttributes>
          </SomethingLoad>
          <Target>
              <TargetTable> 
                  <TargetTableEntry> 
                      <Name>New York</Name>
                      <Latitude>40.7128</Latitude>
                      <Longitude>-74.0060</Longitude>
                      <Population>8804190</Population>
                  </TargetTableEntry>
              </TargetTable>
          </Target>
      </Factory>

json2xml_modify_prompt: |
    用户将输入一个json对象和一个字符串形式的xml标签，将json对象中可能包含的信息更新到xml中有关的元素上标签，格式化输出xml字符串
    EXAMPLE INPUT: 
        json:
        {
            "action_type": "1",
            "object": {
              "object_name": "CVN78",
              "longitude": "116.391",
              "latitude": "40.042",
              "object_asset": [
              ],
              "attribute": {
              }
            }
          } 
        xml:
        <Factory name="CVN78">
            <FactoryWaypoints> 
                <WaypointTableEntry> 
                    <Lat>45.0</Lat>
                    <Lon>-10.0</Lon>
                    <Alt>0</Alt>
                    <latest/>
                </WaypointTableEntry>
            </FactoryWaypoints>
        </Factory> 
        
    EXAMPLE OUTPUT:
        <Factory name="CVN78">
            <FactoryWaypoints>
                <WaypointTableEntry> 
                    <Lat>45.0</Lat>
                    <Lon>-10.0</Lon>
                    <Alt>0</Alt>
                </WaypointTableEntry>
                <WaypointTableEntry>
                    <Lat>116.391</Lat>
                    <Lon>40.042</Lon> 
                    <Alt>0</Alt>
                    <latest/>
                </WaypointTableEntry>
            </FactoryWaypoints>
        </Factory> 

